---

env:
  - distro: centos6
    init: /sbin/init
    run_opts: ""

services:
  - docker

# geerlingguy makes Docker builds specifically for Ansible testing
before_install:
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  - container_id=$(mktemp)
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/ansible_uclalib_role_vagrant:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/ansible_uclalib_role_vagrant/tests/test.yml --syntax-check'
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm sed -i -e 's/#retry_files_enabled/retry_files_enabled/g' /etc/ansible/ansible.cfg'
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook -v /etc/ansible/roles/ansible_uclalib_role_vagrant/tests/test.yml'
#  - idempotence=$(mktemp)
#  - 'docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/ansible_uclalib_role_vagrant/tests/test.yml | tee -a ${idempotence}'
#  - 'tail ${idempotence} | grep -q "changed=0.*failed=0" && (echo "Idempotence test: pass" && exit 0) || (echo "Idempotence test: fail" && exit 1)'
#  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ls -Rl /home/vagrant'

notifications:
  # Notify Ansible Galaxy when a role builds successfully.
